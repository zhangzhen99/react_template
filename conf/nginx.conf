#user  nobody;
worker_processes 4;

#error_log  /wwwlogs/error.log;
#error_log  /wwwlogs/error.log  notice;
error_log  /wwwlogs/www_error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /wwwlogs/www_access.log main;

    sendfile        on;
    #tcp_nopush     on;
    tcp_nopush 		on; # 对于 keepalive 连接，可以尽快发送响应
    tcp_nodelay 	on; # 包填满了再发，与 sendfile 组合用

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    gzip on;
    gzip_vary on;
    gzip_http_version 1.0; # 对 HTTP 1.0 启用，据说 30% 的移动流量是 HTTP 1.0，还好我用联通
    gzip_min_length 1000; # 太小的没必要压缩
    gzip_comp_level 6; # 其实大于 0 都行，CPU 够用就设大点吧
    gzip_disable msie6;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml;

    server {
        listen       80;
        client_max_body_size 26m;
        charset utf-8;
        root   /www;
        #access_log  /wwwlogs/host.access.log  main;
        # API 反向代理
        location /api/ {
            proxy_redirect off;
            proxy_set_header  Host  $host:$server_port;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404;
            
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET';

            more_clear_headers 'Referer';
            more_clear_headers 'Refer';

            proxy_pass https://oa.zhimi.com/api/;
            autoindex on;
        }

        location ~* \.(txt)$ {
            root /www;
        }

        location / {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET';
            # autoindex on;

            index  index.html index.htm index.js;
            try_files $uri /index.html;
        }


        location ~* \.html$ {
            try_files $uri /index.html;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /www;
        }
    }
}

